/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iris;

import com.mysql.jdbc.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import javax.swing.JFrame;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Time;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class IRIS_RentalEdit extends javax.swing.JFrame {
    DateFormat dateformat = new SimpleDateFormat("MM-dd-yyyy"); 
    Date date = new Date();
    String rdate = dateformat.format(date);
    SimpleDateFormat ctime = new SimpleDateFormat("HH:mm");
    String time = ctime.format(date);
    int itemid = 0;
    
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    private void ItemList(){
        Connection con1;
        PreparedStatement pst1;
        ResultSet rs1;
        try{
        con1 = IRIS_Connection.getConnection();
        pst1 = con1.prepareStatement("select * from inventory_item");
        rs1 = pst1.executeQuery();
        
        while(rs1.next()){
            String items = rs1.getString("item_name");
            Rent_Name.addItem(items);
        }
        }catch(SQLException e)
            {}
    }
    
    public IRIS_RentalEdit() {
        initComponents();
        ItemList();
        this.setLocationRelativeTo(null);
    }
        String rid = null,rsname = null,rroom = null,rtmin = null,rtmout = null, ritd = null;
        String rin = null,rdesc = null, rf = null,roic = null,rcd = null,rdtr2 = null;
        Date rdtr;
        
        
    public IRIS_RentalEdit(String logname, String passid)
    {   initComponents();
        ItemList();
        Officer_Name.setText(logname);
        int c;
        PreparedStatement pst2;
        ResultSet rs2;
        try{
        con = IRIS_Connection.getConnection();
        pst = con.prepareStatement("select * from rental where rn_id=?");
        pst.setString(1,passid);
        rs = pst.executeQuery();
        ResultSetMetaData rss = rs.getMetaData();
        c = rss.getColumnCount();
        
        while(rs.next())
        {
                        rid = rs.getString("rn_id");
                        rsname = rs.getString("rn_stuname");
                        rdtr = rs.getDate("rn_dtr");
                        rroom = rs.getString("rn_room");
                        rtmin = rs.getString("rn_tmin");
                        rtmout = rs.getString("rn_tmout");
                        ritd = rs.getString("rn_itemid");
                        rin = rs.getString("rn_itemname");
                        rdesc = rs.getString("rn_itemdesc");
                        rf = rs.getString("rn_fee");
                        roic = rs.getString("rn_oic");
                        rcd = rs.getString("rn_cdate");
                        rdtr2 = rs.getString("rn_dtr");
                        
                        Rent_StuName.setText(rsname);
                        Rent_DateChooser.setDate(rdtr);
                        Rent_Room.setText(rroom);
                        Rent_Tin.setValue(rtmin);
                        Rent_Tout.setValue(rtmout);
                        Rent_Name.setSelectedItem(rin);
                        Rent_ItemDesc.setText(rdesc);
                        Rent_Fee.setText(rf);
        }
        
        }catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Failed");
                Logger.getLogger(IRIS_RentalEdit.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    
    public class Available{
       Connection con = null;
       ResultSet rs = null;
       PreparedStatement ps = null;
       public ResultSet find(String s){
           try{
           con = DriverManager.getConnection("jdbc:mysql://localhost/irisdbms","root","");
           ps = con.prepareStatement("select item_description,item_id from inventory where item_name = ? and item_availability in ('In Stock')");
           ps.setString(1,s);
           rs = ps.executeQuery();
           }catch(Exception ex){
              JOptionPane.showMessageDialog(null, ex.getMessage());
           }
           return rs;
       }
   }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        RentLabel = new javax.swing.JLabel();
        Rent_Ldate = new javax.swing.JLabel();
        Rent_CurrDate = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Officer_Name = new javax.swing.JTextField();
        Rent_LStuName = new javax.swing.JLabel();
        Rent_StuName = new javax.swing.JTextField();
        Rent_LDetails = new javax.swing.JLabel();
        Rent_LDTR = new javax.swing.JLabel();
        Rent_DateChooser = new com.toedter.calendar.JDateChooser();
        Rent_LRoom = new javax.swing.JLabel();
        Rent_Room = new javax.swing.JTextField();
        Rent_LTin = new javax.swing.JLabel();
        Rent_LTout = new javax.swing.JLabel();
        Rent_LItemName = new javax.swing.JLabel();
        Rent_Name = new javax.swing.JComboBox<>();
        Rent_LItemDesc = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        Rent_Confirm = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Rent_ItemDesc = new javax.swing.JTextArea();
        Rent_LFee = new javax.swing.JLabel();
        Rent_Fee = new javax.swing.JTextField();
        Rent_Tin = new javax.swing.JSpinner();
        Rent_Tout = new javax.swing.JSpinner();
        Rent_LFee1 = new javax.swing.JLabel();
        Back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setSize(new java.awt.Dimension(1136, 814));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("IRIS");

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel3.setText("IBITS Rental & Inventory System");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("X");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("_");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\Raven\\Documents\\NetBeansProjects\\JAVA\\pictures\\50x50.png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(864, 864, 864))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(360, 360, 360))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton2)
                                .addComponent(jButton1))
                            .addGap(5, 5, 5))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addGap(0, 0, 0)
                            .addComponent(jLabel3))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(46, 56, 56));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        RentLabel.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        RentLabel.setForeground(new java.awt.Color(252, 226, 5));
        RentLabel.setText("Update Rent");

        Rent_Ldate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Rent_Ldate.setForeground(new java.awt.Color(204, 204, 204));
        Rent_Ldate.setText("Rental Date:");

        Rent_CurrDate.setEditable(false);
        Rent_CurrDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Rent_CurrDate.setText(rdate);
        Rent_CurrDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rent_CurrDateActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("Officer in Charge:");

        Officer_Name.setEditable(false);
        Officer_Name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        Rent_LStuName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Rent_LStuName.setForeground(new java.awt.Color(204, 204, 204));
        Rent_LStuName.setText("Student Name:");

        Rent_StuName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Rent_StuName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rent_StuNameActionPerformed(evt);
            }
        });

        Rent_LDetails.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        Rent_LDetails.setForeground(new java.awt.Color(252, 226, 5));
        Rent_LDetails.setText("Rental Details");

        Rent_LDTR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Rent_LDTR.setForeground(new java.awt.Color(204, 204, 204));
        Rent_LDTR.setText("Date to Rent:");

        Rent_DateChooser.setMinSelectableDate(date);

        Rent_LRoom.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Rent_LRoom.setForeground(new java.awt.Color(204, 204, 204));
        Rent_LRoom.setText("Room:");

        Rent_Room.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Rent_Room.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rent_RoomActionPerformed(evt);
            }
        });

        Rent_LTin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Rent_LTin.setForeground(new java.awt.Color(204, 204, 204));
        Rent_LTin.setText("Time in:");

        Rent_LTout.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Rent_LTout.setForeground(new java.awt.Color(204, 204, 204));
        Rent_LTout.setText("Time Out:");

        Rent_LItemName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Rent_LItemName.setForeground(new java.awt.Color(204, 204, 204));
        Rent_LItemName.setText("Item Name:");

        Rent_Name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Rent_Name.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TV" }));
        Rent_Name.setSelectedIndex(-1);
        Rent_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rent_NameActionPerformed(evt);
            }
        });

        Rent_LItemDesc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Rent_LItemDesc.setForeground(new java.awt.Color(204, 204, 204));
        Rent_LItemDesc.setText("Item Description:");

        Rent_Confirm.setText("Confirm");
        Rent_Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rent_ConfirmActionPerformed(evt);
            }
        });

        Rent_ItemDesc.setEditable(false);
        Rent_ItemDesc.setColumns(20);
        Rent_ItemDesc.setRows(5);
        jScrollPane1.setViewportView(Rent_ItemDesc);

        Rent_LFee.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Rent_LFee.setForeground(new java.awt.Color(204, 204, 204));
        Rent_LFee.setText("Fee:");

        Rent_Fee.setEditable(false);
        Rent_Fee.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        Rent_Tin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Rent_Tin.setModel(new javax.swing.SpinnerListModel(new String[] {"07:00", "07:15", "07:30", "07:45", "08:00", "08:15", "08:30", "08:45", "09:00", "09:15", "09:30", "09:45", "10:00", "10:15", "10:30", "10:45", "11:00", "11:15", "11:30", "11:45", "12:00", "12:15", "12:30", "12:45", "13:00", "13:15", "13:30", "13:45", "14:00", "14:15", "14:30", "14:45", "15:00", "15:15", "15:30", "15:45", "16:00", "16:15", "16:30", "16:45", "17:00", "17:15", "17:30", "17:45", "18:00", "18:15", "18:30", "18:45", "19:00", "19:15", "19:30", "19:45", "20:00", "20:15", "20:30", "20:45", "21:00", "21:15", "21:30", "21:45", "22:00", "22:15", "22:30"}));

        Rent_Tout.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Rent_Tout.setModel(new javax.swing.SpinnerListModel(new String[] {"07:00", "07:15", "07:30", "07:45", "08:00", "08:15", "08:30", "08:45", "09:00", "09:15", "09:30", "09:45", "10:00", "10:15", "10:30", "10:45", "11:00", "11:15", "11:30", "11:45", "12:00", "12:15", "12:30", "12:45", "13:00", "13:15", "13:30", "13:45", "14:00", "14:15", "14:30", "14:45", "15:00", "15:15", "15:30", "15:45", "16:00", "16:15", "16:30", "16:45", "17:00", "17:15", "17:30", "17:45", "18:00", "18:15", "18:30", "18:45", "19:00", "19:15", "19:30", "19:45", "20:00", "20:15", "20:30", "20:45", "21:00", "21:15", "21:30", "21:45", "22:00", "22:15", "22:30"}));

        Rent_LFee1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Rent_LFee1.setForeground(new java.awt.Color(204, 204, 204));
        Rent_LFee1.setText("₱");

        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Rent_LRoom)
                    .addComponent(Rent_LDTR)
                    .addComponent(Rent_LDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Rent_LStuName)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Rent_Ldate)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(Rent_StuName, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Rent_CurrDate)
                            .addComponent(Officer_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Rent_LTout)
                            .addComponent(Rent_LTin))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Rent_Room)
                                .addComponent(Rent_Tin)
                                .addComponent(Rent_Tout, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Rent_DateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(90, 90, 90)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(Rent_LFee)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Rent_LFee1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Rent_Fee, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Rent_LItemName)
                                        .addComponent(Rent_LItemDesc))
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addGap(30, 30, 30)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Rent_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(Rent_Confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jSeparator1))
                .addGap(0, 39, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(RentLabel)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Rent_LStuName)
                            .addComponent(Rent_StuName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(33, 33, 33)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(Officer_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Rent_Ldate)
                            .addComponent(Rent_CurrDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(Rent_LDetails)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Rent_LItemName)
                            .addComponent(Rent_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Rent_LItemDesc)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(Rent_DateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(Rent_Room, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(Rent_LDTR)
                                .addGap(17, 17, 17)
                                .addComponent(Rent_LRoom)))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Rent_Tin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Rent_LTin))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Rent_Tout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Rent_LTout)
                            .addComponent(Rent_LFee)
                            .addComponent(Rent_LFee1)
                            .addComponent(Rent_Fee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rent_Confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Rent_CurrDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rent_CurrDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Rent_CurrDateActionPerformed

    private void Rent_RoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rent_RoomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Rent_RoomActionPerformed

    private void Rent_ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rent_ConfirmActionPerformed
       try{
            int r_id = 0;
            //int r_id = Integer.parseInt(.get(0));
            String r_stuname = Rent_StuName.getText();
            
            Date r_dtr = Rent_DateChooser.getDate();
            String drent2 = dateformat.format(r_dtr);
            java.util.Date dateStr2 = dateformat.parse(drent2);
            java.sql.Date dateDB2 = new java.sql.Date(dateStr2.getTime());
            
            String r_room = Rent_Room.getText();
            String r_tmin =(String) Rent_Tin.getValue();
            String r_tmout =(String) Rent_Tout.getValue();
            String r_itemname =Rent_Name.getSelectedItem().toString();
            String r_itemdesc =Rent_ItemDesc.getText();
            String r_fee = Rent_Fee.getText();
            String r_oic = Officer_Name.getText();
              
            java.util.Date dateStr = dateformat.parse(rdate);
            java.sql.Date dateDB = new java.sql.Date(dateStr.getTime());
            
            int rid2 = Integer.parseInt(rid);
            
            Calendar cal1 = Calendar.getInstance();
            cal1.setTime(date);
            Calendar cal2 = Calendar.getInstance();
            cal2.setTime(r_dtr);
            
            SimpleDateFormat hour = new SimpleDateFormat("HH");
            String hourtime = hour.format(date);
            int htime = Integer.parseInt(hourtime);
            SimpleDateFormat minute = new SimpleDateFormat("mm");
            String minutetime = minute.format(date);
            int mtime = Integer.parseInt(minutetime);
            
            String chi = r_tmin.substring(0,2);
            int chtin = Integer.parseInt(chi);
            String cmi = r_tmin.substring(r_tmin.length() - 2);
            int cmtin = Integer.parseInt(cmi);
            String cho = r_tmout.substring(0,2);
            int chtout = Integer.parseInt(cho);
            String cmo = r_tmout.substring(r_tmout.length() - 2);
            int cmtout = Integer.parseInt(cmo);
            int ctr = 1;
            
            if ((false==(cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
                        cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR)))&&
                    (chtin == chtout && cmtin == cmtout) || (chtin > chtout) || 
                    (chtin == chtout && cmtin > cmtout))
            {
                JOptionPane.showMessageDialog(null,"Current time is " +time+"\nInput Correct Time In & Time Out");
                ctr = 0;
            }
            else if((true==(cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
                        cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR)))
                    && ((chtin < htime) || (chtin == htime && cmtin < mtime) || 
                       (chtin > chtout) || (chtin == chtout && cmtin > cmtout) ||
                       (chtin == chtout && cmtin == cmtout)
              ))
            {
                JOptionPane.showMessageDialog(null,"Current time is " +time+"\nInput Correct Time In & Time Out");
                ctr = 0;
            }
            if(r_stuname.equals(""))
            {
                JOptionPane.showMessageDialog(null,"Enter Student Name");
                ctr = 0;
            }
            if(r_room.equals(""))
            {
                JOptionPane.showMessageDialog(null,"Enter Room Number");
                ctr = 0;
            }
            
            
            PreparedStatement pst, upd, pst2, upd2, rdump, rupd;
            String dump = "INSERT INTO `rental_dump`(`rn_id`, `rn_stuno`, `rn_stuname`, `rn_section`, `rn_dtr`, `rn_room`, `rn_tmin`, `rn_tmout`, `rn_itemid`, `rn_itemname`, `rn_itemdesc`, `rn_fee`, `rn_oic`, `rn_cdate`) SELECT `rn_id`, `rn_stuno`, `rn_stuname`, `rn_section`, `rn_dtr`, `rn_room`, `rn_tmin`, `rn_tmout`, `rn_itemid`, `rn_itemname`, `rn_itemdesc`, `rn_fee`, `rn_oic`, `rn_cdate` FROM `rental` WHERE rn_id = ?";
            String rud = "UPDATE rental_dump i INNER JOIN rental r ON i.rn_id = r.rn_id SET i.rn_type = 'Updated' WHERE i.rn_id = r.rn_id and i.rn_id = ? and i.rdump_id = ?";
            String query ="update rental set rn_stuname=?, rn_dtr=?, rn_room=?, rn_tmin=?, rn_tmout=?, rn_itemid=?, rn_itemname=?, rn_itemdesc=?, rn_fee=?, rn_oic=?, rn_cdate=? where rn_id=? ";
            String ud = "UPDATE inventory i INNER JOIN rental r ON i.item_id = r.rn_itemid SET i.item_availability = 'In Stock' WHERE i.item_id = r.rn_itemid and r.rn_id = ?";
            
            if (ctr > 0){
            try {
                rdump = IRIS_Connection.getConnection().prepareStatement(dump, Statement.RETURN_GENERATED_KEYS);
                rupd = IRIS_Connection.getConnection().prepareStatement(rud);
                pst = IRIS_Connection.getConnection().prepareStatement(query);
                upd = IRIS_Connection.getConnection().prepareStatement(ud);
                
                rdump.setInt(1, rid2);
                rdump.executeUpdate();
                
                ResultSet ts1 = rdump.getGeneratedKeys();
                int rec_id1=0;
                if (ts1.next()){
                    rec_id1= ts1.getInt(1);
                }
                
                rupd.setInt(1, rid2);
                rupd.setInt(2, rec_id1);
                rupd.executeUpdate();
                
			pst.setString(1,r_stuname);
                        pst.setDate(2,dateDB2);
			pst.setString(3,r_room);
                        pst.setString(4,r_tmin);
			pst.setString(5,r_tmout);
                        pst.setInt(6,itemid);
                        pst.setString(7,r_itemname);
			pst.setString(8,r_itemdesc);
                        pst.setString(9,r_fee);
                        pst.setString(10,r_oic);
			pst.setDate(11,dateDB);
			pst.setInt(12,rid2);
                        
                        upd.setInt(1, rid2);
                        
                upd.executeUpdate();
		
                if(pst.executeUpdate() > 0)
                {   try{
                    ResultSet rs2;
                    pst2 = con.prepareStatement("select * from rental where rn_id=?");
                    pst2.setInt(1,rid2);
                    rs2 = pst2.executeQuery();
                    
                    String ridd = null, ritdd = null;
                    while(rs2.next()) {
                        ridd = rs2.getString("rn_id");
                        ritdd = rs2.getString("rn_itemid");
                    }
                    int ridd2 = Integer.parseInt(ritdd);
                    String ud2 = "UPDATE inventory SET item_availability = 'Under Rent' WHERE item_id = ?";
                    
                    upd2 = IRIS_Connection.getConnection().prepareStatement(ud2);
                    upd2.setInt(1, ridd2);
                    upd2.executeUpdate();
                    } 
                    catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null,"Failed");
                    Logger.getLogger(IRIS_RentalEdit.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    
                    JOptionPane.showMessageDialog(null,"Rent ID "+rid+" is Successfully Updated");
                    
                        String logname = Officer_Name.getText();
                        IRIS_RentalSchedule res = new IRIS_RentalSchedule(logname);
                        res.setVisible(true);
                        res.pack();
                        res.setLocationRelativeTo(null);
                        res.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                        this.dispose();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Failed");
                Logger.getLogger(IRIS_RentalEdit.class.getName()).log(Level.SEVERE, null, ex);
            }}
            
        } catch (ParseException ex) {
            Logger.getLogger(IRIS_RentalEdit.class.getName()).log(Level.SEVERE,null, ex);
        }
            
                   
    }//GEN-LAST:event_Rent_ConfirmActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void Rent_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rent_NameActionPerformed
        Available f = new Available();
        ResultSet rs = null;
        String rname = Rent_Name.getSelectedItem().toString();
        
        Calendar cal1 = Calendar.getInstance();
        cal1.setTime(date);
        Calendar cal2 = Calendar.getInstance();
        cal2.setTime(rdtr);

        rs = f.find(Rent_Name.getSelectedItem().toString());
        try{
          if(rs.next()){
              itemid = rs.getInt("item_id");
              Rent_ItemDesc.setText(rs.getString("item_description"));
              if(rname.equals("TV")&&(rf.equals("0"))&&(true==(cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
                        cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR))))
                      Rent_Fee.setText("50");
              else if (rname.equals("TV")&&(rf.equals("50"))&&(false==(cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
                        cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR))))
                 Rent_Fee.setText("0");
              else
                  Rent_Fee.setText("0");
          }  else{
              JOptionPane.showMessageDialog(null, "Item Not Available");
              Rent_ItemDesc.setText(null);
              Rent_Fee.setText(null);
          }
        }catch(Exception ex){
               JOptionPane.showMessageDialog(null, ex.getMessage());
                }
    }//GEN-LAST:event_Rent_NameActionPerformed

    private void Rent_StuNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rent_StuNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Rent_StuNameActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        String logname = Officer_Name.getText();
        IRIS_RentalSchedule rs = new IRIS_RentalSchedule(logname);
        rs.setVisible(true);
        rs.pack();
        rs.setLocationRelativeTo(null);
        rs.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_BackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IRIS_RentalEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IRIS_RentalEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IRIS_RentalEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IRIS_RentalEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IRIS_RentalEdit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JTextField Officer_Name;
    private javax.swing.JLabel RentLabel;
    private javax.swing.JButton Rent_Confirm;
    private javax.swing.JTextField Rent_CurrDate;
    private com.toedter.calendar.JDateChooser Rent_DateChooser;
    private javax.swing.JTextField Rent_Fee;
    private javax.swing.JTextArea Rent_ItemDesc;
    private javax.swing.JLabel Rent_LDTR;
    private javax.swing.JLabel Rent_LDetails;
    private javax.swing.JLabel Rent_LFee;
    private javax.swing.JLabel Rent_LFee1;
    private javax.swing.JLabel Rent_LItemDesc;
    private javax.swing.JLabel Rent_LItemName;
    private javax.swing.JLabel Rent_LRoom;
    private javax.swing.JLabel Rent_LStuName;
    private javax.swing.JLabel Rent_LTin;
    private javax.swing.JLabel Rent_LTout;
    private javax.swing.JLabel Rent_Ldate;
    private javax.swing.JComboBox<String> Rent_Name;
    private javax.swing.JTextField Rent_Room;
    private javax.swing.JTextField Rent_StuName;
    private javax.swing.JSpinner Rent_Tin;
    private javax.swing.JSpinner Rent_Tout;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
